{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jo\\\\software-projects\\\\geotop-a\\\\src\\\\components\\\\NavPills\\\\NavPills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\";\nimport SwipeableViews from \"react-swipeable-views\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // core components\n\nimport GridContainer from \"../Grid/GridContainer.js\"; //\"../components/Grid/GridContainer.js\";\n\nimport GridItem from \"../Grid/GridItem.js\"; // \"../components/Grid/GridItem.js\";\n\nimport styles from \"../../assets/jss/material-kit-react/components/navPillsStyle.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport Button from \"../../components/CustomButtons/Button.js\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Close from \"@material-ui/icons/Close\";\nimport imagenPrueba from \"../../assets/img/faces/avatar.jpg\";\nconst useStyles = makeStyles(styles);\nconst Transition = /*#__PURE__*/React.forwardRef(_c = function Transition(props, ref) {\n  return /*#__PURE__*/_jsxDEV(Slide, {\n    direction: \"down\",\n    ref: ref,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Transition;\nexport default function NavPills(props) {\n  _s();\n\n  const [talkModal, setTalkModal] = useState({\n    'keywords': ['cool', 'col']\n  });\n  const [talkTitle, setTalkTitle] = useState('');\n  const [talkDate, setTalkDate] = useState('');\n  const [talkDescription, setTalkDescription] = useState('');\n  const [talkVideo, setTalkVideo] = useState('');\n  const [talkSpeaker, setTalkSpeaker] = useState('');\n  const [talkKeywords, setTalkKeywords] = useState([]);\n  const [speakerID, setSpeakerID] = useState(0);\n  const {\n    content\n  } = props;\n  const keySeason = Object.keys(content);\n  const [active, setActive] = React.useState(props.active);\n  const [classicModal, setClassicModal] = React.useState(false);\n\n  const handleChange = (event, active) => {\n    setActive(active); //alert('cambio');\n  };\n\n  const handleChangeIndex = index => {\n    setActive(index);\n  };\n\n  const classes = useStyles();\n  const {\n    tabs,\n    direction,\n    color,\n    horizontal,\n    alignCenter\n  } = props;\n  const flexContainerClasses = classNames({\n    [classes.flexContainer]: true,\n    [classes.horizontalDisplay]: horizontal !== undefined\n  });\n  const imageClasses = classNames(classes.imgRaised, classes.imgRounded, classes.imgFluid);\n\n  const tabButtons = /*#__PURE__*/_jsxDEV(Tabs, {\n    classes: {\n      root: classes.root,\n      fixed: classes.fixed,\n      flexContainer: flexContainerClasses,\n      indicator: classes.displayNone\n    },\n    value: active,\n    onChange: handleChange,\n    centered: alignCenter,\n    children: tabs.map((prop, key) => {\n      var icon = {};\n\n      if (prop.tabIcon !== undefined) {\n        icon[\"icon\"] = /*#__PURE__*/_jsxDEV(prop.tabIcon, {\n          className: classes.tabIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 26\n        }, this);\n      }\n\n      const pillsClasses = classNames({\n        [classes.pills]: true,\n        [classes.horizontalPills]: horizontal !== undefined,\n        [classes.pillsWithIcons]: prop.tabIcon !== undefined\n      });\n      return /*#__PURE__*/_jsxDEV(Tab, {\n        label: prop.tabButton,\n        ...icon,\n        classes: {\n          root: pillsClasses,\n          selected: classes[color],\n          wrapper: classes.tabWrapper\n        }\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this); // Funcion para leer todos los archivos de una carpeta (npm install --save-dev webpack@4.44.2 webpack-cli)\n\n\n  function importAll(r) {\n    return r.keys().map(r);\n  }\n\n  const speakerImages = importAll(require.context('../../assets/img/images/speakers', false, /\\.(png|jpe?g|svg)$/));\n\n  const tabContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.contentWrapper,\n    children: /*#__PURE__*/_jsxDEV(SwipeableViews, {\n      axis: direction === \"rtl\" ? \"x-reverse\" : \"x\",\n      index: active,\n      onChangeIndex: handleChangeIndex,\n      children: tabs.map((prop, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tabContent,\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            alignItems: \"center\",\n            children: keySeason.length > 0 && content[keySeason[key]].map(talk => {\n              return /*#__PURE__*/_jsxDEV(GridItem, {\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  plain: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: classes.cardTitle,\n                    style: {\n                      textAlign: 'left'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: classes.smallTitle,\n                      children: talk['date']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n                    xs: 12,\n                    sm: 12,\n                    md: 6,\n                    className: classes.itemGrid,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: speakerImages[talk['speakerID']].default,\n                      alt: \"...\",\n                      className: imageClasses\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: classes.cardTitle,\n                    children: [talk['title'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      className: classes.smallTitle,\n                      children: talk['speaker']\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    round: true,\n                    color: \"primary\",\n                    className: classes.button,\n                    onClick: () => {\n                      setClassicModal(true);\n                      setTalkTitle(talk['title']);\n                      setTalkVideo(talk['video']);\n                      setTalkDescription(talk['abstract']);\n                      setTalkKeywords(talk['keywords']);\n                      setTalkSpeaker(talk['speaker']);\n                      setTalkDate(talk['date']);\n                      setSpeakerID(talk['speakerID']);\n                    },\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n                    classes: {\n                      root: classes.center,\n                      paper: classes.modal\n                    },\n                    open: classicModal,\n                    TransitionComponent: Transition,\n                    keepMounted: true,\n                    onClose: () => setClassicModal(false),\n                    \"aria-labelledby\": \"classic-modal-slide-title\",\n                    \"aria-describedby\": \"classic-modal-slide-description\",\n                    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                      id: \"classic-modal-slide-title\",\n                      disableTypography: true,\n                      className: classes.modalHeader,\n                      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                        className: classes.modalCloseButton,\n                        \"aria-label\": \"Close\",\n                        color: \"inherit\",\n                        onClick: () => setClassicModal(false),\n                        children: /*#__PURE__*/_jsxDEV(Close, {\n                          className: classes.modalClose\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 29\n                        }, this)\n                      }, \"close\", false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                        className: classes.modalTitle,\n                        children: \"Talk Details\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                      id: \"classic-modal-slide-description\",\n                      className: classes.modalBody,\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Speaker: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 198,\n                          columnNumber: 29\n                        }, this), \" \", talkSpeaker, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Title: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 200,\n                          columnNumber: 29\n                        }, this), talkTitle, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 201,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Date: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 29\n                        }, this), talkDate, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 203,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Keywords: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 29\n                        }, this), \" \", talkKeywords.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 205,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Abstract: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 206,\n                          columnNumber: 29\n                        }, this), talkDescription, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                          children: \"Video: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 29\n                        }, this), \" \", talkVideo === null ? 'Not available yet.' : /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: talkVideo,\n                          children: \"Click here\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 208,\n                          columnNumber: 89\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 197,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                      className: classes.modalFooter,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: () => setClassicModal(false),\n                        color: \"danger\",\n                        simple: true,\n                        children: \"Close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n\n  return horizontal !== undefined ? /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, { ...horizontal.tabsGrid,\n      children: tabButtons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, { ...horizontal.contentGrid,\n      children: tabContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tabButtons, tabContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavPills, \"1n3u0geaudGQIDtbchbdStf900Q=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = NavPills;\nNavPills.defaultProps = {\n  active: 0,\n  color: \"primary\"\n};\nNavPills.propTypes = {\n  // index of the default active pill\n  active: PropTypes.number,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    tabButton: PropTypes.string,\n    tabIcon: PropTypes.object,\n    tabContent: PropTypes.node\n  })).isRequired,\n  color: PropTypes.oneOf([\"primary\", \"warning\", \"danger\", \"success\", \"info\", \"rose\"]),\n  direction: PropTypes.string,\n  horizontal: PropTypes.shape({\n    tabsGrid: PropTypes.object,\n    contentGrid: PropTypes.object\n  }),\n  alignCenter: PropTypes.bool\n};\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Transition$React.forwardRef\");\n$RefreshReg$(_c2, \"Transition\");\n$RefreshReg$(_c3, \"NavPills\");","map":{"version":3,"sources":["C:/Users/jo/software-projects/geotop-a/src/components/NavPills/NavPills.js"],"names":["React","useEffect","useState","classNames","PropTypes","SwipeableViews","makeStyles","Tabs","Tab","GridContainer","GridItem","styles","Card","CardBody","Button","Slide","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Close","imagenPrueba","useStyles","Transition","forwardRef","props","ref","NavPills","talkModal","setTalkModal","talkTitle","setTalkTitle","talkDate","setTalkDate","talkDescription","setTalkDescription","talkVideo","setTalkVideo","talkSpeaker","setTalkSpeaker","talkKeywords","setTalkKeywords","speakerID","setSpeakerID","content","keySeason","Object","keys","active","setActive","classicModal","setClassicModal","handleChange","event","handleChangeIndex","index","classes","tabs","direction","color","horizontal","alignCenter","flexContainerClasses","flexContainer","horizontalDisplay","undefined","imageClasses","imgRaised","imgRounded","imgFluid","tabButtons","root","fixed","indicator","displayNone","map","prop","key","icon","tabIcon","pillsClasses","pills","horizontalPills","pillsWithIcons","tabButton","selected","wrapper","tabWrapper","importAll","r","speakerImages","require","context","tabContent","contentWrapper","length","talk","cardTitle","textAlign","smallTitle","itemGrid","default","button","center","paper","modal","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","join","modalFooter","tabsGrid","contentGrid","defaultProps","propTypes","number","arrayOf","shape","string","object","node","isRequired","oneOf","bool"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\n// core components\r\nimport GridContainer from \"../Grid/GridContainer.js\"  //\"../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../Grid/GridItem.js\" // \"../components/Grid/GridItem.js\";\r\n\r\nimport styles from \"../../assets/jss/material-kit-react/components/navPillsStyle.js\";\r\n\r\nimport Card from \"../../components/Card/Card.js\";\r\nimport CardBody from \"../../components/Card/CardBody.js\"\r\nimport Button from \"../../components/CustomButtons/Button.js\";\r\n\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nimport imagenPrueba from \"../../assets/img/faces/avatar.jpg\";\r\n\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function NavPills(props) {\r\n\r\n  const[talkModal,setTalkModal] = useState({'keywords': ['cool','col']});\r\n  const[talkTitle,setTalkTitle] = useState('');\r\n  const[talkDate,setTalkDate] = useState('');\r\n  const[talkDescription,setTalkDescription] = useState('');\r\n  const[talkVideo,setTalkVideo] = useState('');\r\n  const[talkSpeaker,setTalkSpeaker] = useState('');\r\n  const[talkKeywords,setTalkKeywords] = useState([]);\r\n  const[speakerID,setSpeakerID] = useState(0);\r\n\r\n\r\n  const {content} = props;\r\n  const keySeason =  Object.keys(content);\r\n\r\n\r\n  const [active, setActive] = React.useState(props.active);\r\n  const [classicModal, setClassicModal] = React.useState(false);\r\n  const handleChange = (event, active) => {\r\n    setActive(active);\r\n    //alert('cambio');\r\n  };\r\n  const handleChangeIndex = index => {\r\n    setActive(index);\r\n  };\r\n  const classes = useStyles();\r\n  const { tabs, direction, color, horizontal, alignCenter } = props;\r\n  const flexContainerClasses = classNames({\r\n    [classes.flexContainer]: true,\r\n    [classes.horizontalDisplay]: horizontal !== undefined\r\n  });\r\n\r\n  const imageClasses = classNames(\r\n    classes.imgRaised,\r\n    classes.imgRounded,\r\n    classes.imgFluid\r\n  );\r\n  const tabButtons = (\r\n    <Tabs\r\n      classes={{\r\n        root: classes.root,\r\n        fixed: classes.fixed,\r\n        flexContainer: flexContainerClasses,\r\n        indicator: classes.displayNone\r\n      }}\r\n      value={active}\r\n      onChange={handleChange}\r\n      centered={alignCenter}\r\n    >\r\n      {tabs.map((prop, key) => {\r\n        var icon = {};\r\n        if (prop.tabIcon !== undefined) {\r\n          icon[\"icon\"] = <prop.tabIcon className={classes.tabIcon} />;\r\n        }\r\n        const pillsClasses = classNames({\r\n          [classes.pills]: true,\r\n          [classes.horizontalPills]: horizontal !== undefined,\r\n          [classes.pillsWithIcons]: prop.tabIcon !== undefined\r\n        });\r\n        return (\r\n          <Tab\r\n            label={prop.tabButton}\r\n            key={key}\r\n            {...icon}\r\n            classes={{\r\n              root: pillsClasses,\r\n              selected: classes[color],\r\n              wrapper: classes.tabWrapper\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </Tabs>\r\n  );\r\n\r\n  // Funcion para leer todos los archivos de una carpeta (npm install --save-dev webpack@4.44.2 webpack-cli)\r\n  function importAll(r) {\r\n    return r.keys().map(r);\r\n  }\r\n  const speakerImages = importAll(require.context('../../assets/img/images/speakers', false, /\\.(png|jpe?g|svg)$/));\r\n  \r\n  const tabContent = (\r\n    <div className={classes.contentWrapper}>\r\n      <SwipeableViews\r\n        axis={direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={active}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n          {tabs.map((prop, key) => {\r\n            return (\r\n              <div className={classes.tabContent} key={key}>\r\n                <GridContainer alignItems=\"center\">\r\n                  {keySeason.length > 0 && content[keySeason[key]].map(talk =>    \r\n                    {\r\n                    return (\r\n                    <GridItem xs={12} sm={6} md={4} >\r\n                    <Card plain>\r\n                      <h4 className={classes.cardTitle} style={{textAlign:'left'}}>\r\n                        <small className={classes.smallTitle}>{talk['date']}</small>\r\n                      </h4>\r\n                      <GridItem xs={12} sm={12} md={6} className={classes.itemGrid}>\r\n                        <img src={speakerImages[talk['speakerID']].default} alt=\"...\" className={imageClasses} />\r\n                      </GridItem>\r\n                      <h4 className={classes.cardTitle}>\r\n                        {talk['title']}\r\n                        <br />\r\n                    <small className={classes.smallTitle}>{talk['speaker']}</small>\r\n                      </h4>\r\n                      <Button \r\n                        round \r\n                        color='primary' \r\n                        className={classes.button}\r\n                        onClick={() => {setClassicModal(true); \r\n                            setTalkTitle(talk['title']);\r\n                            setTalkVideo(talk['video']);\r\n                            setTalkDescription(talk['abstract']);\r\n                            setTalkKeywords(talk['keywords']);\r\n                            setTalkSpeaker(talk['speaker']); \r\n                            setTalkDate(talk['date']); \r\n                            setSpeakerID(talk['speakerID']); \r\n                          }}\r\n                      >\r\n                          Details\r\n                        </Button>\r\n                      <Dialog\r\n                        classes={{\r\n                          root: classes.center,\r\n                          paper: classes.modal\r\n                        }}\r\n                        open={classicModal}\r\n                        TransitionComponent={Transition}\r\n                        keepMounted\r\n                        onClose={() => setClassicModal(false)}\r\n                        aria-labelledby=\"classic-modal-slide-title\"\r\n                        aria-describedby=\"classic-modal-slide-description\"\r\n                      >\r\n                        <DialogTitle\r\n                          id=\"classic-modal-slide-title\"\r\n                          disableTypography\r\n                          className={classes.modalHeader}\r\n                        >\r\n                          <IconButton\r\n                            className={classes.modalCloseButton}\r\n                            key=\"close\"\r\n                            aria-label=\"Close\"\r\n                            color=\"inherit\"\r\n                            onClick={() => setClassicModal(false)}\r\n                          >\r\n                            <Close className={classes.modalClose} />\r\n                          </IconButton>\r\n                          <h2 className={classes.modalTitle}>Talk Details</h2>\r\n                        </DialogTitle>\r\n                        <DialogContent\r\n                          id=\"classic-modal-slide-description\"\r\n                          className={classes.modalBody}\r\n                        >\r\n                          <p>\r\n                            <b>Speaker: </b> {talkSpeaker}\r\n                            <br/>\r\n                            <b>Title: </b>{talkTitle}\r\n                            <br/>\r\n                            <b>Date: </b>{talkDate}\r\n                            <br/>\r\n                            <b>Keywords: </b> {talkKeywords.join(', ')}\r\n                            <br/>\r\n                            <b>Abstract: </b>{talkDescription}\r\n                            <br/>\r\n                            <b>Video: </b> {talkVideo === null ? 'Not available yet.' : <a href={talkVideo}>Click here</a>}\r\n                          </p>\r\n                        </DialogContent>\r\n                        <DialogActions className={classes.modalFooter}>\r\n                          <Button\r\n                            onClick={() => setClassicModal(false)}\r\n                            color=\"danger\"\r\n                            simple\r\n                          >\r\n                            Close\r\n                          </Button>\r\n                        </DialogActions>\r\n                      </Dialog>\r\n\r\n                    </Card>\r\n                  </GridItem>\r\n                  );})}\r\n                </GridContainer>\r\n              </div>\r\n            );\r\n          })}\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n  return horizontal !== undefined ? (\r\n    <GridContainer>\r\n      <GridItem {...horizontal.tabsGrid}>{tabButtons}</GridItem>\r\n      <GridItem {...horizontal.contentGrid}>{tabContent}</GridItem>\r\n    </GridContainer>\r\n  ) : (\r\n    <div>\r\n      {tabButtons}\r\n      {tabContent}\r\n    </div>\r\n  );\r\n}\r\n\r\nNavPills.defaultProps = {\r\n  active: 0,\r\n  color: \"primary\"\r\n};\r\n\r\nNavPills.propTypes = {\r\n  // index of the default active pill\r\n  active: PropTypes.number,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tabButton: PropTypes.string,\r\n      tabIcon: PropTypes.object,\r\n      tabContent: PropTypes.node\r\n    })\r\n  ).isRequired,\r\n  color: PropTypes.oneOf([\r\n    \"primary\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"success\",\r\n    \"info\",\r\n    \"rose\"\r\n  ]),\r\n  direction: PropTypes.string,\r\n  horizontal: PropTypes.shape({\r\n    tabsGrid: PropTypes.object,\r\n    contentGrid: PropTypes.object\r\n  }),\r\n  alignCenter: PropTypes.bool\r\n};\r\n"]},"metadata":{},"sourceType":"module"}