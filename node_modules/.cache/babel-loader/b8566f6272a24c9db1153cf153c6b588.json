{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jo\\\\software-projects\\\\geotop-a\\\\src\\\\views\\\\ListSpeakersPage\\\\Sections\\\\ListSpeakersSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport removeAccents from \"remove-accents\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport styles from \"../../../assets/jss/material-kit-react/views/landingPageSections/teamStyle.js\";\nimport MenuOpen from '@material-ui/icons/MenuOpen';\nimport { db } from '../../../ConfigFirebase';\nimport { Speaker } from \"@material-ui/icons\";\nconst useStyles = makeStyles(styles);\nexport default function ListSpeakersSection() {\n  _s();\n\n  const classes = useStyles();\n  var speakers = [];\n  const [speakersList, setSpeakersList] = useState([]);\n  const [speakersListByLetter, setSpeakersListByLatter] = useState([]);\n  const [lettersInSurname, setLettersInSurname] = useState([]);\n  const [visitLetters, setVisitLetters] = useState({});\n  const [talks, setTalks] = useState({});\n  useEffect(async () => {\n    var talks = {};\n    await db.collection(\"talks\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(async function (doc) {\n        talks[doc.id] = doc.data();\n      });\n    }).catch(function (error) {\n      alert(\"Cannot load some talk.\");\n    });\n    setTalks(talks);\n    await db.collection(\"speakers\").where(\"talks\", \"!=\", null).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        speakers.push({\n          name: doc.data().name,\n          surname: doc.data().surname,\n          middle_initial: doc.data().middle_initial,\n          talks: doc.data().talks,\n          years: []\n        });\n        let speakers_len = speakers.length;\n        let talks_len = speakers[speakers_len - 1].talks.length;\n\n        for (let i = 0; i < talks_len; i++) {\n          db.collection(\"talks\").doc(speakers[speakers_len - 1].talks[i].toString()).get().then(function (doc) {\n            speakers[speakers_len - 1].years.push(doc.data().date.toDate().getFullYear());\n          }).catch(function (error) {\n            alert(\"Cannot load some talk\");\n          });\n        }\n      }); // Se acaba el forEach\n    }).catch(function (error) {\n      alert(\"Cannot load speakers\");\n    });\n    speakers.sort(function (a, b) {\n      if (a.surname > b.surname) {\n        return 1;\n      }\n\n      if (a.surname < b.surname) {\n        return -1;\n      }\n\n      return 0;\n    });\n    setSpeakersList(speakers);\n  }, []); // Al modificar speakers list con el contenido se actualiza\n\n  useEffect(() => {\n    handleLettersInSurname();\n  }, [speakersList]); // FunciÃ³n que revisa las letras que existen para hacer listas\n\n  function handleLettersInSurname() {\n    let letterSet = new Set();\n    let visitLetters = {};\n    let speakersWithLetter = {};\n    speakersList.forEach(speaker => {\n      const letter = removeAccents(speaker.surname.charAt(0)); //console.log(letter);\n\n      letterSet.add(letter);\n      visitLetters[letter] = false;\n      speakersWithLetter[letter] = [];\n    });\n    speakersList.forEach(speaker => {\n      const letter = removeAccents(speaker.surname.charAt(0)); //console.log(letter);\n\n      speakersWithLetter[letter].push(speaker);\n    });\n    setLettersInSurname([...letterSet]);\n    setVisitLetters(visitLetters);\n    setSpeakersListByLatter(speakersWithLetter);\n  }\n\n  function listWithLetter(letter) {\n    const listItems = speakersListByLetter[letter].map(speaker => {\n      var first = true;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.title,\n        style: {\n          fontSize: '20px',\n          fontStyle: 'normal'\n        },\n        children: [speaker.surname, \" \", speaker.name, \" \", speaker.middle_initial, \" \", \" (\", speaker.talks.map(function (talkID) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [first ? first = false : ', ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: talks[talkID].video,\n              target: \"_blank\",\n              children: talks[talkID].season\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true);\n        }), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this);\n    });\n    return listItems;\n  }\n\n  function listAlphabetical() {\n    const listItems = lettersInSurname.map(letter => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        cursor: 'pointer'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.title,\n        children: [letter, \" \", /*#__PURE__*/_jsxDEV(MenuOpen, {\n          onClick: onclickLetter.bind(this, letter)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 34\n        }, this), \" \", visitLetters[letter] ? listWithLetter(letter) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        textAlign: 'left'\n      },\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n  const [count, setCount] = useState(0);\n\n  function onclickLetter(letter) {\n    let newVisit = visitLetters;\n    newVisit[letter] = !newVisit[letter];\n    setVisitLetters(newVisit);\n    setCount(count + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.section,\n    children: listAlphabetical()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListSpeakersSection, \"dPis6ZS83Kk9n1pDja/wS02GFoQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListSpeakersSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListSpeakersSection\");","map":{"version":3,"sources":["C:/Users/jo/software-projects/geotop-a/src/views/ListSpeakersPage/Sections/ListSpeakersSection.js"],"names":["React","useEffect","useState","removeAccents","classNames","makeStyles","GridContainer","GridItem","styles","MenuOpen","db","Speaker","useStyles","ListSpeakersSection","classes","speakers","speakersList","setSpeakersList","speakersListByLetter","setSpeakersListByLatter","lettersInSurname","setLettersInSurname","visitLetters","setVisitLetters","talks","setTalks","collection","get","then","querySnapshot","forEach","doc","id","data","catch","error","alert","where","push","name","surname","middle_initial","years","speakers_len","length","talks_len","i","toString","date","toDate","getFullYear","sort","a","b","handleLettersInSurname","letterSet","Set","speakersWithLetter","speaker","letter","charAt","add","listWithLetter","listItems","map","first","title","fontSize","fontStyle","talkID","video","season","listAlphabetical","cursor","onclickLetter","bind","textAlign","count","setCount","newVisit","section"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nimport removeAccents from \"remove-accents\"\r\n\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../components/Grid/GridItem.js\";\r\n\r\nimport styles from \"../../../assets/jss/material-kit-react/views/landingPageSections/teamStyle.js\";\r\n\r\nimport MenuOpen from '@material-ui/icons/MenuOpen';\r\n\r\nimport {db} from '../../../ConfigFirebase';\r\nimport { Speaker } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function ListSpeakersSection(){\r\n    const classes = useStyles();\r\n    var speakers = [];\r\n    const [speakersList,setSpeakersList] = useState([]);\r\n    const [speakersListByLetter,setSpeakersListByLatter] = useState([]);\r\n    const [lettersInSurname, setLettersInSurname] = useState([]);\r\n    const [visitLetters, setVisitLetters] = useState({});\r\n    const [talks,setTalks] = useState({});\r\n\r\n\r\n    useEffect(async () => {\r\n        var talks = {};\r\n        await db.collection(\"talks\")\r\n        .get()\r\n        .then(function(querySnapshot) {\r\n            querySnapshot.forEach(async function(doc){\r\n                talks[doc.id] = doc.data();\r\n            })\r\n        })\r\n        .catch(function(error) {\r\n            alert(\"Cannot load some talk.\");\r\n        });\r\n        setTalks(talks);\r\n\r\n        await db.collection(\"speakers\").where(\"talks\",\"!=\", null)\r\n            .get()\r\n            .then(function(querySnapshot) {\r\n                querySnapshot.forEach(function(doc) {\r\n                    speakers.push({\r\n                        name: doc.data().name,\r\n                        surname: doc.data().surname,\r\n                        middle_initial: doc.data().middle_initial,\r\n                        talks: doc.data().talks,\r\n                        years: [],\r\n                    });\r\n                    \r\n                    let speakers_len = speakers.length\r\n                    let talks_len = speakers[speakers_len-1].talks.length\r\n\r\n                    for(let i=0; i<talks_len; i++){\r\n                        db.collection(\"talks\").doc(speakers[speakers_len-1].talks[i].toString())\r\n                        .get()\r\n                        .then(function(doc){\r\n                            speakers[speakers_len-1].years\r\n                            .push(doc.data().date.toDate().getFullYear());\r\n                        })\r\n                        .catch(function(error){\r\n                            alert(\"Cannot load some talk\");\r\n                        });\r\n                    }\r\n                }); // Se acaba el forEach\r\n            })\r\n            .catch(function(error) {\r\n                alert(\"Cannot load speakers\");\r\n            });\r\n        speakers.sort(function(a,b){\r\n            if(a.surname > b.surname){\r\n                return 1;\r\n            }\r\n            if(a.surname < b.surname){\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        setSpeakersList(speakers);\r\n    },[]);\r\n\r\n    // Al modificar speakers list con el contenido se actualiza\r\n    useEffect(() => {\r\n        handleLettersInSurname();\r\n    },[speakersList]);\r\n      \r\n    // FunciÃ³n que revisa las letras que existen para hacer listas\r\n    function handleLettersInSurname(){\r\n        let letterSet = new Set();\r\n        let visitLetters = {};\r\n        let speakersWithLetter = {};\r\n        speakersList\r\n        .forEach(speaker => {\r\n            const letter = removeAccents(speaker.surname.charAt(0));\r\n            //console.log(letter);\r\n            letterSet.add(letter);\r\n            visitLetters[letter] = false;\r\n            speakersWithLetter[letter] = [];\r\n        });\r\n        speakersList\r\n        .forEach(speaker => {\r\n            const letter = removeAccents(speaker.surname.charAt(0));\r\n            //console.log(letter);\r\n            speakersWithLetter[letter].push(speaker);\r\n        });\r\n        setLettersInSurname([...letterSet]);\r\n        setVisitLetters(visitLetters);\r\n        setSpeakersListByLatter(speakersWithLetter); \r\n    }  \r\n\r\n    function listWithLetter(letter){\r\n\r\n        const listItems = speakersListByLetter[letter].map(speaker => {\r\n            var first = true;\r\n            return(\r\n                <p className={classes.title} style={{fontSize: '20px', fontStyle:'normal'}}>\r\n                {speaker.surname} {speaker.name} {speaker.middle_initial} {\" (\"}\r\n                {speaker.talks.map(function(talkID) {\r\n                  return (\r\n                      <>\r\n                        {first ? first=false : ', ' }<a href={talks[talkID].video} target=\"_blank\">{talks[talkID].season}</a>\r\n                      </>\r\n                  );  \r\n                })}\r\n                {\")\"}\r\n                </p>\r\n            );\r\n        }\r\n        \r\n        );\r\n        \r\n        return (\r\n           listItems\r\n        );\r\n    }\r\n\r\n    function listAlphabetical(){\r\n        const listItems = lettersInSurname.map(letter => \r\n                <li \r\n                    style={{cursor: 'pointer'}}> \r\n                    <h1 className={classes.title}> \r\n                        {letter} <MenuOpen\r\n                        onClick={onclickLetter.bind(this, letter)}\r\n                        /> {visitLetters[letter] ? listWithLetter(letter) : null}\r\n                    </h1>\r\n                </li>\r\n        );\r\n        return (\r\n            <ul style={{textAlign: 'left'}}>{listItems}</ul>\r\n        );\r\n    }\r\n\r\n    const [count, setCount] = useState(0);\r\n\r\n    function onclickLetter(letter){\r\n        let newVisit = visitLetters;\r\n        newVisit[letter] = !newVisit[letter];\r\n        setVisitLetters(newVisit);\r\n        setCount(count+1);\r\n    }\r\n    return(\r\n        <div className={classes.section}> \r\n            {listAlphabetical()}\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}