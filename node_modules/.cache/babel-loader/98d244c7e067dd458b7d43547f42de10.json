{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jo\\\\software-projects\\\\geotop-a\\\\src\\\\views\\\\NextTalksPage\\\\Sections\\\\NextTalksSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // @material-ui/icons\n// core components\n\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../../components/Grid/GridItem.js\";\nimport Button from \"../../../components/CustomButtons/Button.js\";\nimport Card from \"../../../components/Card/Card.js\";\nimport CardBody from \"../../../components/Card/CardBody.js\";\nimport CardFooter from \"../../../components/Card/CardFooter.js\";\nimport styles from \"../../../assets/jss/material-kit-react/views/landingPageSections/teamStyle.js\";\nimport image1 from \"../../../assets/img/images/speakers/sp041.png\";\nconst useStyles = makeStyles(styles);\nexport default function NextTalksSection() {\n  _s();\n\n  const [talks, setTalks] = useState([{\n    date: \"January 22, 2021\",\n    speaker: \"Sergei Nechaev\",\n    title: \"Low-dimensional topology and non-Euclidean geometry in nature\",\n    keywords: [\"Statistical topology\", \"Low-dimensional topology\", \"unknotted long polymer chain\", \"DNA folding\"],\n    abstract: 'In the talk I demonstrate on specific examples the emergence of a new actively ' + 'developing field, the \"statistical topology\", which unifies topology, noncommutative geometry, ' + 'probability theory and random walks. In particular, I plan to discuss the following interlinked ' + 'questions: (i) statistics of random walks on hyperbolic manifolds and graphs in connection with ' + 'the topology and fractal structure of unknotted long polymer chain confined in a bounding box and ' + 'hierarchical DNA folding, and (ii) optimal embedding in the three-dimensional space of ' + 'exponentially growing tissues, like, for example, the salad leaf, and how the hierarchical ' + 'ultrametric geometry emerges in that case.',\n    image: \"../../../assets/img/images/sp41.jpg\"\n  }]);\n  const classes = useStyles();\n  const imageClasses = classNames(classes.imgRaised, classes.imgRoundedCircle, classes.imgFluid);\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 5,\n      className: classes.nextTalk,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image1,\n        className: imageClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 12,\n      sm: 12,\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(GridContainer, {\n        children: talks.map(talk => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: classes.title,\n              children: talk.speaker\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.smallTitle,\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: talk.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 93\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.smallTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Title: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 93\n              }, this), talk.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.smallTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Abstract: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 93\n              }, this), \" \", talk.abstract]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 12,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.smallTitle,\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Keywords: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 93\n              }, this), \" \", talk.keywords.join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NextTalksSection, \"V5inxQxVRImWy0U1trtnlB5gbJY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NextTalksSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextTalksSection\");","map":{"version":3,"sources":["C:/Users/jo/software-projects/geotop-a/src/views/NextTalksPage/Sections/NextTalksSection.js"],"names":["React","useState","classNames","makeStyles","GridContainer","GridItem","Button","Card","CardBody","CardFooter","styles","image1","useStyles","NextTalksSection","talks","setTalks","date","speaker","title","keywords","abstract","image","classes","imageClasses","imgRaised","imgRoundedCircle","imgFluid","nextTalk","map","talk","smallTitle","join"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// @material-ui/icons\r\n\r\n// core components\r\nimport GridContainer from \"../../../components/Grid/GridContainer.js\";\r\nimport GridItem from \"../../../components/Grid/GridItem.js\";\r\nimport Button from \"../../../components/CustomButtons/Button.js\";\r\nimport Card from \"../../../components/Card/Card.js\";\r\nimport CardBody from \"../../../components/Card/CardBody.js\";\r\nimport CardFooter from \"../../../components/Card/CardFooter.js\";\r\n\r\nimport styles from \"../../../assets/jss/material-kit-react/views/landingPageSections/teamStyle.js\";\r\nimport image1 from \"../../../assets/img/images/speakers/sp041.png\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function NextTalksSection(){\r\n\r\n    \r\n    const [talks, setTalks] = useState([\r\n        {\r\n            date: \"January 22, 2021\",\r\n            speaker: \"Sergei Nechaev\",\r\n            title: \"Low-dimensional topology and non-Euclidean geometry in nature\",\r\n            keywords: [\"Statistical topology\", \"Low-dimensional topology\", \"unknotted long polymer chain\", \r\n            \"DNA folding\"],\r\n            abstract: 'In the talk I demonstrate on specific examples the emergence of a new actively '\r\n            + 'developing field, the \"statistical topology\", which unifies topology, noncommutative geometry, '\r\n            + 'probability theory and random walks. In particular, I plan to discuss the following interlinked '\r\n            + 'questions: (i) statistics of random walks on hyperbolic manifolds and graphs in connection with '\r\n            + 'the topology and fractal structure of unknotted long polymer chain confined in a bounding box and '\r\n            + 'hierarchical DNA folding, and (ii) optimal embedding in the three-dimensional space of '\r\n            + 'exponentially growing tissues, like, for example, the salad leaf, and how the hierarchical '\r\n            + 'ultrametric geometry emerges in that case.',\r\n            image: \"../../../assets/img/images/sp41.jpg\",\r\n        },\r\n    ]);\r\n\r\n    const classes = useStyles();\r\n    const imageClasses = classNames(\r\n        classes.imgRaised,\r\n        classes.imgRoundedCircle,\r\n        classes.imgFluid,\r\n      );\r\n      \r\n    return(\r\n        <GridContainer>\r\n            <GridItem xs={12} sm={12} md={5} className={classes.nextTalk}>\r\n              <img src={image1} className={imageClasses}/>\r\n            </GridItem>\r\n            <GridItem xs={12} sm={12} md={1}/>\r\n            <GridItem xs={12} sm={12} md={6}>\r\n                <GridContainer>\r\n                    {talks.map(talk => (\r\n                        <>\r\n                        <GridItem xs={12} sm={12} md={12}><h1 className={classes.title}>{talk.speaker}</h1></GridItem>\r\n                        <GridItem xs={12} sm={12} md={12}><p className={classes.smallTitle}><b>{talk.date}</b></p></GridItem>\r\n                        <GridItem xs={12} sm={12} md={12}><p className={classes.smallTitle}><b>{\"Title: \"}</b>{talk.title}</p></GridItem>\r\n                        <GridItem xs={12} sm={12} md={12}><p className={classes.smallTitle}><b>{\"Abstract: \"}</b> {talk.abstract}</p></GridItem>\r\n                        <GridItem xs={12} sm={12} md={12}><p className={classes.smallTitle}><b>{\"Keywords: \"}</b> {talk.keywords.join(\", \")}</p></GridItem>\r\n                        </>\r\n                    ))}\r\n                </GridContainer>\r\n            </GridItem>\r\n        </GridContainer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}